[{"/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/App.tsx":"1","/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/reportWebVitals.ts":"2","/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/atoms/boardState.ts":"3","/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/index.tsx":"4","/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/atoms/selectedMarker.ts":"5","/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/constants.ts":"6","/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/atoms/activePlayer.ts":"7","/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/components/Square/Square.tsx":"8","/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/components/Header/Header.tsx":"9","/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/atoms/shouldAlertUser.ts":"10","/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/atoms/index.ts":"11","/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/atoms/lastMove.ts":"12"},{"size":9078,"mtime":1612023329569,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1609602775056,"results":"15","hashOfConfig":"14"},{"size":569,"mtime":1611855801318,"results":"16","hashOfConfig":"14"},{"size":567,"mtime":1609609417951,"results":"17","hashOfConfig":"14"},{"size":75,"mtime":1611071508758,"results":"18","hashOfConfig":"14"},{"size":493,"mtime":1612023251772,"results":"19","hashOfConfig":"14"},{"size":281,"mtime":1610637447444,"results":"20","hashOfConfig":"14"},{"size":1808,"mtime":1612023298685,"results":"21","hashOfConfig":"14"},{"size":455,"mtime":1609863459333,"results":"22","hashOfConfig":"14"},{"size":86,"mtime":1611070104825,"results":"23","hashOfConfig":"14"},{"size":159,"mtime":1611851564825,"results":"24","hashOfConfig":"14"},{"size":162,"mtime":1611852250707,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"148cfn6",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/App.tsx",["53"],"/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/reportWebVitals.ts",[],"/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/atoms/boardState.ts",[],"/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/index.tsx",[],["54","55"],"/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/atoms/selectedMarker.ts",[],"/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/constants.ts",[],"/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/atoms/activePlayer.ts",[],"/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/components/Square/Square.tsx",["56","57","58"],"import React, { useState, useEffect } from \"react\";\nimport classNames from \"classnames\";\n\nimport {\n  DARK,\n  EMPTY,\n  IS_DARK,\n  IS_LIGHT,\n  LIGHT,\n  KING,\n  IS_KING,\n  isLight,\n  isDark,\n} from \"../../constants\";\nimport { SpaceValue, SquareVariety } from \"../../types\";\nimport { CoordinatePair } from \"../../types/CoordinatePair\";\nimport \"./Square.scss\";\n\ninterface Square {\n  spaceValue: SpaceValue;\n  coordinates: CoordinatePair;\n  handleMove: (coordinates: CoordinatePair) => void;\n  handleClickMarker: (coordinates: CoordinatePair) => void;\n  squareVariety: SquareVariety;\n  shouldAlertUser: boolean;\n  key: string;\n  id: string;\n  isSelected: boolean;\n}\n\nconst Square = ({\n  spaceValue,\n  coordinates,\n  handleMove,\n  handleClickMarker,\n  shouldAlertUser,\n  isSelected,\n}: Square) => {\n  const [isFlashing, setIsFlashing] = useState(false);\n\n  useEffect(() => {\n    if (shouldAlertUser) {\n      setIsFlashing(true);\n    }\n  }, [shouldAlertUser]);\n\n  useEffect(() => {\n    if (isFlashing === true) {\n      setTimeout(() => setIsFlashing(false), 500);\n    }\n  }, [isFlashing]);\n\n  const markerClasses = classNames({\n    marker: true,\n    [IS_LIGHT]: isLight(spaceValue),\n    [IS_DARK]: isDark(spaceValue),\n    [IS_KING]: spaceValue === KING,\n    highlight: isSelected,\n  });\n\n  const squareClasses = classNames({\n    square: true,\n    \"is-flashing\": isFlashing,\n  });\n\n  return (\n    <div className={squareClasses} onClick={() => handleMove(coordinates)}>\n      {spaceValue !== EMPTY && (\n        <div\n          id={`${coordinates.row}-${coordinates.col}-marker`}\n          className={markerClasses}\n          onClick={() => handleClickMarker(coordinates)}\n        >\n          {spaceValue === KING && <div className=\"kingSymbol\"></div>}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Square;\n","/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/components/Header/Header.tsx",["59"],"import React, { Fragment } from \"react\";\nimport { DARK, LIGHT } from \"../../constants\";\nimport \"./Header.scss\";\n\ninterface Header {\n  activePlayer: typeof DARK | typeof LIGHT;\n}\n\nconst Header = ({ activePlayer }: Header) => {\n  return (\n    <Fragment>\n      <h1 className=\"title\">Hnefatafl</h1>\n      <h3 className=\"subtitle\">\n        {activePlayer === DARK ? \"Black to move\" : \"White to move\"}\n      </h3>\n    </Fragment>\n  );\n};\n\nexport default Header;\n","/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/atoms/shouldAlertUser.ts",[],"/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/atoms/index.ts",[],"/Users/joshuaanderson/Desktop/desktop/code/jotai-practice/hnefatafl/src/atoms/lastMove.ts",[],{"ruleId":"60","severity":1,"message":"61","line":69,"column":6,"nodeType":"62","endLine":69,"endColumn":16,"suggestions":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":5,"column":3,"nodeType":"70","messageId":"71","endLine":5,"endColumn":7},{"ruleId":"68","severity":1,"message":"72","line":9,"column":3,"nodeType":"70","messageId":"71","endLine":9,"endColumn":8},{"ruleId":"73","severity":1,"message":"74","line":31,"column":7,"nodeType":"70","messageId":"75","endLine":31,"endColumn":13},{"ruleId":"73","severity":1,"message":"76","line":9,"column":7,"nodeType":"70","messageId":"75","endLine":9,"endColumn":13},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activePlayer', 'getNeighbors', 'handleCapture', 'shouldBeCaptured', 'updateActivePlayer', and 'updateShouldAlertUser'. Either include them or remove the dependency array.","ArrayExpression",["77"],"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"@typescript-eslint/no-unused-vars","'DARK' is defined but never used.","Identifier","unusedVar","'LIGHT' is defined but never used.","@typescript-eslint/no-redeclare","'Square' is already defined.","redeclared","'Header' is already defined.",{"desc":"80","fix":"81"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [activePlayer, getNeighbors, handleCapture, lastMove, shouldBeCaptured, updateActivePlayer, updateShouldAlertUser]",{"range":"82","text":"83"},[2313,2323],"[activePlayer, getNeighbors, handleCapture, lastMove, shouldBeCaptured, updateActivePlayer, updateShouldAlertUser]"]